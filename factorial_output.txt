---------First:Performance and comparison of indivudual input values--------
$`1`
Unit: nanoseconds
                expr   min    lq     mean median      uq    max neval
   factorial_loop(.)   934  1867  2604.12   1867  2800.0  30790   100
 factorial_reduce(.) 19594 21460 24455.54  21461 22393.0 125026   100
   factorial_func(.)     1   934  1297.93    934   934.5  14929   100
    factorial_mem(.)   934  1867  2949.37   2800  2800.0  27992   100

$`5`
Unit: nanoseconds
                expr   min    lq     mean median      uq    max neval
   factorial_loop(.)  1867  2800  3098.63   2800  3733.0  11197   100
 factorial_reduce(.) 28924 29858 35353.25  30791 32656.5 144620   100
   factorial_func(.)  1867  2800  3975.72   3733  4666.0  14929   100
    factorial_mem(.)   934  1867  3537.23   2800  3733.0  69045   100

$`10`
Unit: microseconds
                expr    min     lq     mean median      uq     max neval
   factorial_loop(.)  1.867  2.800  6.10301  3.733  3.7330 252.850   100
 factorial_reduce(.) 35.456 37.322 40.51288 38.255 39.6545 109.165   100
   factorial_func(.)  1.867  2.800  3.68645  3.733  3.7340  11.197   100
    factorial_mem(.)  1.867  1.867  3.68648  2.800  3.7330  72.777   100

$`30`
Unit: nanoseconds
                expr    min     lq      mean median       uq    max neval
   factorial_loop(.)   4666   5599   7399.90   6533   8398.0  37322   100
 factorial_reduce(.) 262181 269645 285058.19 273377 279907.5 858383   100
   factorial_func(.)   1867   2800   4852.72   4666   6532.0  13996   100
    factorial_mem(.)    934   2800   4656.78   4200   5599.0  73710   100

$`60`
Unit: microseconds
                expr     min      lq      mean  median       uq     max neval
   factorial_loop(.)   9.331   9.798  11.17864  11.197  12.1300  18.662   100
 factorial_reduce(.) 308.831 314.430 330.65504 319.095 323.2935 881.708   100
   factorial_func(.)   2.800   3.733   5.44987   5.599   6.5330  13.063   100
    factorial_mem(.)   1.867   2.800   5.26324   4.666   5.5990 112.897   100

---------Second:Performance and comparison of ranges of input values--------
$`range 1:10`
Unit: microseconds
                         expr     min      lq     mean   median       uq     max
   map_dbl(x, factorial_loop) 134.356 137.156 142.5669 140.8880 144.6200 185.672
 map_dbl(x, factorial_reduce) 416.129 422.660 447.7774 429.1915 437.5890 800.534
   map_dbl(x, factorial_func) 137.155 139.955 148.7062 143.6865 148.3520 311.631
    map_dbl(x, factorial_mem) 132.490 136.222 144.4144 139.0210 143.2205 343.354
 neval
   100
   100
   100
   100

$`range 1:20`
Unit: microseconds
                         expr      min        lq      mean   median        uq
   map_dbl(x, factorial_loop)  190.338  200.6010  222.5550  210.864  229.9910
 map_dbl(x, factorial_reduce) 2514.498 2632.5250 2784.5148 2693.639 2857.8500
   map_dbl(x, factorial_func)  183.806  195.4695  221.1088  204.800  227.1925
    map_dbl(x, factorial_mem)  174.477  185.2060  208.8489  193.603  218.3285
      max neval
  390.005   100
 4136.092   100
  494.503   100
  475.842   100

$`range 1:70`
Unit: microseconds
                         expr       min         lq       mean     median        uq
   map_dbl(x, factorial_loop)   638.189   660.1150   716.0681   679.2420   738.022
 map_dbl(x, factorial_reduce) 17299.179 17782.0185 18631.6576 18060.9925 18499.513
   map_dbl(x, factorial_func)   396.536   411.9305   483.6334   427.3255   489.838
    map_dbl(x, factorial_mem)   356.416   368.5450   495.8561   384.4065   449.718
       max neval
  1447.119   100
 27285.324   100
  3130.293   100
  8736.828   100

